@model EmployeeConnect.Models.PO
@using EmployeeConnect.Common;
@using EmployeeConnect.Helper;
<!DOCTYPE html>

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link rel="stylesheet"
          href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/Custom.css" />
    <link rel="stylesheet"
          href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" />
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</head>

<body>
    <script src="~/Scripts/teamsapp.js"></script>
    <script>
        microsoftTeams.initialize();
           submitHandler = (err, result) => {
            debugger;
            console.log(`Submit handler - err: ${err}`);
           // alert("Result = " + JSON.stringify(result) + "\nError = " + JSON.stringify(err));
        };
         function submit(type) {
            debugger;
            let taskInfo = {
             //   title: null
                height: null,
                width: null,
                url: null,
                fallbackUrl: null,
            };

            //taskInfo.title = "Purchase Order";
            taskInfo.height = "medium";
            taskInfo.width = "medium";

                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/podecline";
                taskInfo.height = "@(TaskModelUIConstant.PoDecline.Height)";
                taskInfo.width = "@(TaskModelUIConstant.PoDecline.Width)";


            // Set fallback URL
            taskInfo.fallbackUrl = taskInfo.url;
            microsoftTeams.tasks.startTask(taskInfo, submitHandler);
        }
        function validateForm() {
            debugger;
             let taskInfo = {
             //   title: null,
                height: null,
                width: null,
                url: null,
                fallbackUrl: null,
            };

            //taskInfo.title = "Purchase Order";
            taskInfo.height = "medium";
            taskInfo.width = "medium";

                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/podecline";
                taskInfo.height = "@(TaskModelUIConstant.PoDecline.Height)";
                taskInfo.width = "@(TaskModelUIConstant.PoDecline.Width)";

            // Set fallback URL
            taskInfo.fallbackUrl = taskInfo.url;
            microsoftTeams.tasks.submitTask(taskInfo, "@ApplicationSettings.AppId");
            return true;
        }
    </script>
    <form method="POST" id="podecline" action="/podecline" onSubmit="return validateForm()">
        <div class="container-fluid">
            <header>Purchase order no. @TempData["data"]</header>
            <div>Vendor no. 72383</div>
            <div style="float:right">
                Total amount<br />
                <span class="totalSum">30080</span>
            </div>
            <span class="title"> Store A</span>

        </div>
        <div id="Porder" class="panel-collapse">
            <div class="panel-body">
                <table class="table">
                    <thead class="purchaseHeader">
                        <tr class="head-title-color purchaseHeader">
                            <th>Item code</th>
                            <th>Description</th>
                            <th>Unit price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody class="purchaseBody">
                        @foreach (var item in Model.PoDetails)
                        {
                            <tr class="row-highlight purchaseBody">
                                <td class="itemCode">@Html.DisplayFor(modelItem => item.ItemCode)</td>
                                <td class="Description">@Html.DisplayFor(modelItem => item.ItemDescription)</td>
                                <td class="Unit-price"><span>&#x20b9;</span> @Html.DisplayFor(modelItem => item.UnitPrice)</td>
                                <td class="Quantity">@Html.DisplayFor(modelItem => item.Quantity)</td>
                                <td class="Total">
                                    <span>&#x20b9;</span> @Html.DisplayFor(modelItem => item.Total)
                                </td>


                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" style="margin-left:15px;" class="approve"
                        onclick="submit('Aprroved');">
                    Decline
                </button>
                <button type="button" style="float:left" class="decline"
                        onclick="submit('podecline');">
                    Approve
                </button>
            </div>
        </div>
    </form>
</body>

