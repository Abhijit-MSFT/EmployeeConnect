@model EmployeeConnect.Models.PO
@using EmployeeConnect.Common;
@using EmployeeConnect.Helper;
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link rel="stylesheet"
          href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/Tools.css" />
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <title>BCT</title>
</head>
<body>
    <script>
        microsoftTeams.initialize();
         function validateForm() {
            debugger;
             let taskInfo = {
             //   title: null,
                height: null,
                width: null,
                url: null,
                fallbackUrl: null,
            };

            //taskInfo.title = "Purchase Order";
            taskInfo.height = "medium";
            taskInfo.width = "medium";

                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/createticket";
                taskInfo.height = "@(TaskModelUIConstant.CreateTicket.Height)";
                taskInfo.width = "@(TaskModelUIConstant.CreateTicket.Width)";

            // Set fallback URL
            taskInfo.fallbackUrl = taskInfo.url;
            microsoftTeams.tasks.submitTask(taskInfo, "@ApplicationSettings.AppId");
            return true;
        }
    </script>
    <form method="POST" id="createticket" action="/createticket" onSubmit="return validateForm()">
        <div class="modal-dialog modal-dialog-centered custom-card2"
             role="document">
            <div class="modal-content content-radius">
                <div class="modal-header custom-header">
                    <span class="modal-title tick">
                        <span class="from-next"> Your ticket has been created </span>
                    </span>
                </div>
                <div class="modal-body from-next-body">
                    <div class="ES">Employee support</div>
                    <div class="ES-msg">
                        Need to understand PTO assignment
                    </div>
                    <div class="High-priority">
                        High-priority
                        <span class="exclamation"></span>
                    </div>
                    <div class="ticket-data">
                        <div class="ticket-no">Ticket No.</div>
                        <div class="ticket-no-no">INC000000324567</div>
                    </div>
                    <div>
                        <div class="Date-created">Date created</div>
                        <div class="Date-created-date">Fri 05 Oct, 2018</div>
                    </div>
                    <div class="cancel-ticket">
                        <span class="cancel-icon"></span>
                        <span class="cancel-btn">Cancel ticket</span>
                    </div>
                    <div class="two-btn">
                        <button type="button" class="Close" onclick="closeModel()">Close</button>
                        <button type="button" class="Edit" onclick="submit('createticket')">Edit</button>
                    </div>
                </div>
            </div>
        </div>
        </form>
        <script src="~/Scripts/teamsapp.js"></script>
        <script>
        submitHandler = (err, result) => {
            debugger;
            console.log(`Submit handler - err: ${err}`);
           // alert("Result = " + JSON.stringify(result) + "\nError = " + JSON.stringify(err));
        };

    function closeModel() {
        debugger;
        window.location.href = "@(ApplicationSettings.BaseUrl)" + "/tools";
    }
        function submit(type) {

            debugger;
            let taskInfo = {
                height: null,
                width: null,
                url: null,
                fallbackUrl: null,
            };

            //taskInfo.title = "Purchase Order";
            taskInfo.height = "medium";
            taskInfo.width = "medium";

                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/createticket";
                taskInfo.height = "@(TaskModelUIConstant.CreateTicket.Height)";
                taskInfo.width = "@(TaskModelUIConstant.CreateTicket.Width)";

            // Set fallback URL
            taskInfo.fallbackUrl = taskInfo.url;
            microsoftTeams.tasks.submitTask(taskInfo, "@ApplicationSettings.AppId");
        }
        </script>
</body>
